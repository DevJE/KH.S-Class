/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-03-26 12:03:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Member;

public final class findPassword_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	Member loginUser = (Member)session.getAttribute("loginUser");
	String message = (String)request.getAttribute("message");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html id='findPinHtml'>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>도그하우스</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/doggybeta/resources/css/member/findPin.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/doggybeta/resources/js/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(function () {\r\n");
      out.write("\t\t$('#btnSend').click(function() {\r\n");
      out.write("\t\t\tvar userId = $('#userid').val();\r\n");
      out.write("\t\t\tvar useremail = $('#email').val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar data = \"userid=\"+userId+\"&email=\"+useremail;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype: 'post',\r\n");
      out.write("\t\t\t\tdata: {userid : userId, email : useremail },\r\n");
      out.write("\t\t\t\turl: '/doggybeta/jipsafindpwd',\r\n");
      out.write("\t\t\t\tsuccess: function(result) {\r\n");
      out.write("\t\t\t\t\tvar obj = decodeURIComponent(result.str);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\talert(obj);\r\n");
      out.write("\t\t\t\t}//success\r\n");
      out.write("\t\t\t\t,\r\n");
      out.write("\t\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\t\tconsole.log(\"error : \"+jqXHR+\",\"+textStatus+\",\"+errorThrown);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});//ajax\r\n");
      out.write("\t\t});//btn\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<form action='/doggybeta/jipsafindpwd'>\r\n");
      out.write("<div id='tb'>\r\n");
      out.write("<img id='doglogo' src='/doggybeta/resources/images/로고test2.png'>\r\n");
      out.write("<h3> 비밀번호를 잊으셨나요? </h3>\r\n");
      out.write("\t<span class='first_span'>\r\n");
      out.write("\t\t<input type=\"text\" name=\"userid\" class='mainInputForm inputForm' id=\"userid\" required placeholder='아이디를 입력해주세요' />\r\n");
      out.write("\t\t\t<label class='inputLabel labelJeong' for='userid' data-content='*아 이 디'>\r\n");
      out.write("\t\t\t\t<span class='input_span span_second_jeong'>*아 이 디</span>\r\n");
      out.write("\t\t\t</label>\r\n");
      out.write("\t</span>\r\n");
      out.write("\t<span class='first_span'>\r\n");
      out.write("\t\t<input type='email' name='email' id='email' class='mainInputForm inputForm' required placeholder='이메일 입력후 전송버튼을 눌러주세요'/>\r\n");
      out.write("\t\t\t<label class='inputLabel labelJeong' for='email' data-content='*이 메 일'>\r\n");
      out.write("\t\t\t\t<span class='input_span span_second_jeong'>*이 메 일</span>\r\n");
      out.write("\t\t\t</label>\r\n");
      out.write("\t</span>\r\n");
      out.write("\t<input type='submit' value='전송' id='btnSend'/>\r\n");
      out.write("\t<p>※전송버튼을 누르면 임시비밀번호 발급메일이 발송됩니다.</p>\r\n");
      out.write("</div>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
